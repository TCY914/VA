[
  {
    "path": "posts/2022-04-26-takehome2/",
    "title": "Take-home Exercise 2",
    "description": "This is my Take-home Exercise for critiquing and remaking the data visualization in terms of clarity and aesthetics on graphs.",
    "author": [
      {
        "name": "Joyce Tseng",
        "url": "https://www.linkedin.com/in/joyce-tseng-a7115a1aa/"
      }
    ],
    "date": "2022-05-02",
    "categories": [],
    "contents": "\n\nContents\n1. Overview\n2. Critique\n2.1 Clarity\n2.2 Aesthetics\n\n3. Data Preparation\n4. Redesigned Visualization\n4.1 Step-by-Step\nDescription\n\n5. Learning Points\n\n1. Overview\nIn this exercise, we will critique the following distribution from a\npeer in terms of graph’s clarity and aesthetics, and will remake the\noriginal design based on the data visualization principles and best\npractice.\n\n2. Critique\n2.1 Clarity\nChart Title is not helpful; absence of lead-in and\ncall-outs\nThe title of above 6 plots does not explain the context of the\nvisualization. Readers would not know the key message that the graph\nwould like to convey. For example, the title “Distribution of Age” on\nfirst graph, it does not point out what does the number of distribution\non age present for. Moreover, there are also no lead-in and call-outs to\nexplain any trend or insights.\nArrangement of categorical variables\nOn graph 2, the arrangement of education level is not readable\nfor users in jumbled order.\nOn graph 4, the x-axis is arranged based on numbers of\nparticipants in descending order. However, it is not intuitive for\nreaders with the false group appearing on the left, followed by the true\ngroup. This is quite confusing for readers who expect a logical order of\nx-axis.\n\nChart Type in Appropriate\nDensity plots are useful to quickly visualize the distribution of\nimbalanced dataset by smoothing out the noise and displaying the peak\nand good to compare the distribution of two datasets. For graph 5, the\ndistribution is quite flat, which would be hard to detect highest\ndensity at first glance.\nviolin plots are used for comparing multiple data distribution\nsince they are placed side by side. However, the statistical\ndistribution of each category such as mean and medium cannot be observed\nfrom it. For instance, readers can only witness that there is less\nnumber from house size 1 with 0.75 joviality among three but cannot know\nthe position of statistical values.\n\n2.2 Aesthetics\nTick marks are necessary on continuous scale\nTick marks are missing for continuous data on graph 1 and 5. They are\nused to indicate a reference value at a given point in a chart and\nensure the number of tick marks between each labeled tick marks is\nsame.\nLack of data-ink and annotations\nThe above 6 charts are all used the same color without data-ink or\nany annotations, which is difficult for readers to identify the message\nintending to deliver from each graph.\nX-axis and Y-axis Title\nThe title of x-axis and y-axis should be consistent with a start of\nuppercase letters or lowercase letters.\n3. Data Preparation\nThe data preparation step here is to load the data and visualization\nfrom the original author, which is not the main focus on the exercise,\nso I would not go into details for this and just for reference.\nInstalling Packages\n\n\nhide\n\npackages <- c('tidyverse','ggdist','gghalves','ggthemes','hrbrthemes','ggridges','patchwork','wesanderson')\nfor(p in packages){\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n\nImporting Data\n\n\nhide\n\nparticipants_data <- read_csv(\"Datasets/Attributes/Participants.csv\")\n\n\n\n\n\nhide\n\nsaveRDS(participants_data, file = \"participants_data.rds\")\n\n\n\n\n\nhide\n\nparticipants_data <- readRDS(file = \"participants_data.rds\")\n\n\n\n4. Redesigned Visualization\n4.1 Step-by-Step Description\nGraph 1 - Original\n\n\nhide\n\nbefore1 <- ggplot(data=participants_data,\n       aes(x = age)) +\n  geom_histogram(bins=20,\n                 color = \"grey25\",\n                 fill = \"light blue\")+\n  ggtitle(\"Distribution of Age\")+\n  ylab(\"No. of\\nParticipants\") +\n  theme_ipsum(axis_title_size = 12,\n              grid =\"Y\") +\n  theme(axis.title.y = element_text(angle=0))+\n  geom_vline(aes(xintercept=mean(age,na.rm=T)),\n              color=\"red\",\n              linetype=\"dashed\",\n              size=1) +\n  geom_vline(aes(xintercept=median(age,na.rm=T)),\n              color=\"grey30\",\n              linetype=\"dashed\",\n              size=1)+\n  geom_text((aes(x= mean(age,na.rm=T)+1,\n                 label=\"mean\",\n                 y = 75,\n                 angle =90)),\n            color= \"red\")+\n  geom_text((aes(x= median(age,na.rm=T)-1,\n                 label=\"median\",\n                 y = 75,\n                 angle =90)),\n            color = \"grey30\")\nprint(before1)\n\n\n\n\nGraph 1 - Remake\n\n\nhide\n\nafter1 <- ggplot(data=participants_data,\n       aes(x = age)) +\n  geom_histogram(bins=20,\n                 color = \"grey20\",\n                 fill = \"lightblue3\", size=0.4)+\n  ggtitle(label= \"Distribution of Participants' Age\",\n          subtitle= \"The proportion of 30 to 40 age groups account for the most in Ohio's population\")+\n  xlab(\"Age\")+\n  ylab(\"Number of\\nParticipants\") +\n  theme(axis.title.y = element_text(angle=0))+\n  geom_vline(aes(xintercept=mean(age,na.rm=T)),\n              color=\"red\",\n              linetype=\"dashed\",\n              size=.6) +\n  geom_vline(aes(xintercept=median(age,na.rm=T)),\n              color=\"darkblue\",\n              linetype=\"dashed\",\n              size=.6)+\n  geom_text((aes(x= mean(age,na.rm=T)+1,\n                 label=\"mean\",\n                 y = 75,\n                 angle =90)),\n            color= \"red\")+\n  geom_text((aes(x= median(age,na.rm=T)-1,\n                 label=\"median\",\n                 y = 75,\n                 angle =90)),\n            color = \"darkblue\")+\n  scale_x_continuous(breaks=seq(20,60,5))+\n  scale_y_continuous(breaks=seq(0,85,20))+\n  theme(axis.title.y= element_text(angle=0),\n        plot.title = element_text(color=\"black\", size=16, face=\"bold.italic\"),\n        plot.subtitle = element_text(size=10),\n        panel.background= element_blank(), \n        axis.line= element_line(color= 'grey'), \n        panel.grid.major.y = element_line(size = 0.3, \n                                          linetype = 'solid', colour = \"grey\"), \n        panel.grid.minor.y = element_line(size = 0.1, \n                                          linetype = 'solid', colour = \"grey\")) \n\nprint(after1)  \n\n\n\n\nImprovements are made on a few elements:\nMinor grid line is added on the y-axis, which helps reader know\nthe exact value for each bar and compare for different groups.\nSubtitle is updated to indicate the insight from graph and help\nreader understand the message behind.\nTick marks is added on x-axis and y-axis. This is necessary for\ncontinuous variables to point out the corresponding values to each\nbar.\nGraph 2 - Original\n\n\nhide\n\nlevel_order <- c('Low','HighSchoolOrCollege','Bachelors','Graduate')\nbefore2 <- ggplot(data=participants_data,\n      aes(x=factor(educationLevel,levels = level_order)))+\n  geom_bar(color = \"grey25\",\n           fill=\"light blue\") +\n  coord_flip() +\n  ylab(\"No of Participants\") +\n  xlab(\"Education Level\") +\n  theme_ipsum(axis_title_size = 12, grid =\"X\")+\n  theme(axis.title.y=element_text(angle =0,\n                                  margin=margin(r=-70)),\n        axis.line.x = element_line(color=\"grey25\", size = 0.02)) +\n  geom_text(stat=\"count\",\n    aes(label=paste0(..count..,\", \",\n    round(..count../sum(..count..)*100,\n      1),\"%\")),\n    hjust=1,\n    color = \"grey25\",\n    size=3.5)+\n  ggtitle(\"Distribution of Education\")\n\nprint(before2)\n\n\n\n\nGraph 2 - Remake\n\n\nhide\n\nafter2 <- ggplot(data=participants_data,\n      aes(x=reorder(educationLevel,educationLevel,function(x)length(x))))+\n  geom_bar(fill=\"light blue3\") +\n  coord_flip() +\n  ylab(\"Number of Participants\") +\n  xlab(\"Education Level\") +\n  theme(axis.title.y=element_text(angle =0,\n                                  margin=margin(r=-70)),\n        panel.grid.major.y = element_blank(),\n        panel.grid.minor.y = element_blank(),\n        panel.grid.minor.x = element_blank()) +\n  geom_text(stat=\"count\",\n    aes(label=paste0(..count..,\", \",\n    round(..count../sum(..count..)*100,\n      1),\"%\")),\n    hjust=1.08,\n    color = \"grey30\") +\n  theme(axis.title.y= element_text(angle=0),\n        plot.title = element_text(color=\"black\", size=16, face=\"bold.italic\"),\n        plot.subtitle = element_text(size=10),\n        panel.background= element_blank(), \n        axis.line= element_line(color= 'grey'), \n        panel.grid.major.x = element_line(size = 0.3, \n                                          linetype = 'solid', colour = \"grey\"), \n        panel.grid.minor.x = element_line(size = 0.1, \n                                          linetype = 'solid', colour = \"grey\"),\n        axis.ticks.y = element_blank()) +\n  ggtitle(label= \"Distribution of Participants' Education Level\",\n          subtitle= \"Most people in Ohio enter the workplace after graduating from high school or college\")\n\nprint(after2)\n\n\n\n\nImprovements are made on a few elements:\nThe order of education level on y-axis is reorder in descending\norder. This format is more clear and readable to find out the lowest and\nhighest value on graph.\nThe label on bars has been adjusted and moved a little to left so\nthat the icon of % won’t cling to the border of bars.\nGraph 3 - Original\n\n\nhide\n\nbefore3 <- ggplot(data=participants_data,\n      aes(x=householdSize))+\n  geom_bar(color = \"grey25\",\n           fill=\"light blue\") +\n  ylab(\"No of\\nParticipants\") +\n  xlab(\"Household Size\") +\n  ylim(0,400) +\n  theme_ipsum(axis_title_size = 12, grid =\"Y\")+\n  theme(axis.title.y=element_text(angle =0,\n                                  margin=margin(r=20))) +\n  geom_text(stat=\"count\",\n    aes(label=paste0(..count..,\", \",\n    round(..count../sum(..count..)*100,\n      1),\"%\")),\n    vjust=-0.5,\n    color = \"grey25\",\n    size=3.5)+\n  ggtitle(\"Distribution of Household Size\")\n\nprint(before3)\n\n\n\n\nGraph 3 - Remake\n\n\nhide\n\nafter3 <- ggplot(data=participants_data,\n      aes(x=householdSize))+\n  geom_bar(fill=\"light blue3\") +\n  ylab(\"Number of\\nParticipants\") +\n  xlab(\"Household Size\") +\n  ylim(0,400)+\n  ggtitle(label= \"Distribution of Participants' Household Size\",\n          subtitle= \"Around 70% of participants are married, but most of them do not have kids in familiy\") +\n  theme(axis.title.y= element_text(angle=0,\n                                  margin=margin(r=20)),\n        panel.background= element_blank(),\n        plot.title = element_text(color=\"black\", size=16, face=\"bold.italic\"),\n        plot.subtitle = element_text(size=10), \n        axis.line= element_line(color= 'grey'), \n        panel.grid.major.y = element_line(size = 0.3, \n                                          linetype = 'solid', colour = \"grey\"), \n        panel.grid.minor.y = element_line(size = 0.1, \n                                          linetype = 'solid', colour = \"grey\"),\n        axis.ticks.x = element_blank())+\n  geom_text(stat=\"count\",\n    aes(label=paste0(..count..,\", \",\n    round(..count../sum(..count..)*100,\n      1),\"%\")),\n    vjust=-0.5,\n    color = \"grey25\",\n    size=3.5)\n\nprint(after3)\n\n\n\n\nImprovements are made on a few elements:\nWithout the border line on bars, the overall layout and design is\nmore neat and concise.\nAdding minor grid line can accurately know the value on each bar\nwithout labels on it.\nThe title is renamed to be more specific.\nGraph 4 - Original\n\n\nhide\n\nbefore4 <- ggplot(data=participants_data,\n      aes(x=haveKids))+\n  geom_bar(color = \"grey25\",\n           fill=\"light blue\") +\n  ylab(\"No of\\nParticipants\") +\n  xlab(\"Have Kids\") +\n  ylim(0,750) +\n  theme_ipsum(axis_title_size = 12, grid =\"Y\")+\n  theme(axis.title.y=element_text(angle =0,\n                                  margin=margin(r=20))) +\n  geom_text(stat=\"count\",\n    aes(label=paste0(..count..,\", \",\n    round(..count../sum(..count..)*100,\n      1),\"%\")),\n    vjust=-0.5,\n    color = \"grey25\",\n    size=3.5)+\n  ggtitle(\"Participants with and without kids\")\nprint(before4)\n\n\n\n\nGraph 4 - Remake\n\n\nhide\n\nparticipants_data <- within(participants_data, \n                   haveKids <- factor(haveKids, \n                                      levels=names(sort(table(haveKids), \n                                                        decreasing=FALSE))))\n\nafter4 <- ggplot(data=participants_data, aes(x=haveKids))+\n  geom_bar(fill=\"light blue3\", width = 0.7) +\n  ylab(\"Number of\\nParticipants\") +\n  xlab(\"Have Kids\") +\n  theme(axis.title.y=element_text(angle =0,\n                                  margin=margin(r=20))) +\n  geom_text(stat=\"count\",\n    aes(label=paste0(..count..,\", \",\n    round(..count../sum(..count..)*100,\n      1),\"%\")),\n    vjust=-0.5,\n    color = \"grey25\",\n    size=3.5)+\n  ggtitle(label = \"Dsitribution of Participants with and without kids\",\n          subtitle = \"Most family do not have kids in Ohio, even though the majority are married\")+\n  scale_y_continuous(breaks=seq(0,800,150))+\n  theme(axis.title.y= element_text(angle=0),\n        plot.title = element_text(color=\"black\", size=16, face=\"bold.italic\"),\n        plot.subtitle = element_text(size=10),\n        panel.background= element_blank(), \n        axis.line= element_line(color= 'grey'), \n        panel.grid.major.y = element_line(size = 0.3, \n                                          linetype = 'solid', colour = \"grey\"), \n        panel.grid.minor.y = element_line(size = 0.1, \n                                          linetype = 'solid', colour = \"grey\"),\n        axis.ticks.x = element_blank()) \nprint(after4)\n\n\n\n\nImprovements are made on a few elements:\nAdjusting the order of x-axis in logical way.\nRemoving the border line on bars for clear\nvisualization.\nGraph 5 - Original\n\n\nhide\n\nbefore5 <- ggplot(participants_data,\n       aes(x=joviality))+\n  geom_density(color = \"grey25\",\n               fill=\"light Blue\")+\n  ggtitle(\"Distribution of Joviality\")+\n  theme_ipsum(axis_title_size = 12, grid=\"Y\")+\n  theme(axis.title.y = element_text(angle=0))+\n  scale_y_continuous(expand = c(0,0),limits = c(0,1.5))\n\nprint(before5)\n\n\n\n\nGraph 5 - Remake\n\n\nhide\n\nafter5 <- ggplot(participants_data, \n       aes(joviality)) +\n  geom_histogram(bins=20,\n                 color = \"grey20\",\n                 fill = \"white\", size=0.4) +\n  geom_density(aes(y= ..density..*60), lwd = 1, colour =\"lightblue3\",\n               fill = \"lightblue3\", alpha = 0.6) +\n  scale_y_continuous('Number of\\nResidents',\n                     expand = c(0.05, 0.2),\n                     sec.axis = sec_axis(~. /60, name= 'Density',\n                                         breaks= seq(0, 1.2, 0.5) )) +\n  geom_vline(aes(xintercept=mean(joviality)),\n            color=\"red\", linetype=\"dashed\", size=.6)+\n  geom_vline(aes(xintercept=median(joviality)),\n            color=\"darkblue\", linetype=\"dashed\", size=.6) +\n  labs(y= 'Number of\\nResidents', x= 'Joviality') +\n  ggtitle(label= \"Distribution of Residents' Joviality\",\n       subtitle= 'Numbers of residents in Ohio with happiness or not distribute evenly') +\n  theme(axis.title.y= element_text(angle=0), \n        axis.title.y.right = element_text(angle=0, vjust = 1),\n        panel.grid.major = element_line(color= 'grey', size = 0.1),\n        panel.background= element_blank(), \n        axis.line= element_line(color= 'grey'),\n        plot.title = element_text(color=\"black\", size=16, face=\"bold.italic\"),\n        plot.subtitle = element_text(size=10))\n\nprint(after5)\n\n\n\n\nImprovements are made on a few elements:\nHistogram is added on the visualization because it is difficult\nfor reader to identify the value for different level of joviality. From\nthe density graph we can conclude that there are two local peaks on the\ndistribution, one around joviality = 0.15-0.30 and another around\n0.85-0.90, while the highest value is on 0.90-0.95.\nMean and median joviality value is presented on the graph to\nprovide additional statistical information on the distribution.\nGraph 6 - Original\n\n\nhide\n\nbefore6 <- ggplot(data = participants_data,\n  aes(y = joviality,\n  x= factor(householdSize))) +\n  geom_violin(color =\"grey25\",\n              fill=\"light blue\") +\n  xlab(\"Household Size\")+\n  ylab(\"Joviality\")+\n  theme_ipsum(axis_title_size=12, grid =\"Y\")+\n  theme(axis.title.y = element_text(angle=0))+\n  ggtitle(\"Joviality index by Household size\")\nprint(before6)\n\n\n\n\nGraph 6 - Remake\n\n\nhide\n\nafter6 <- ggplot(data = participants_data,\n  aes(y = joviality,\n  x= factor(householdSize))) +\n  geom_violin(width=.75, colour =\"lightblue3\",\n               fill = \"lightblue3\", alpha = 0.6) +\n  xlab(\"Household Size\")+\n  ylab(\"Joviality\")+\n  theme(axis.title.y = element_text(angle=0))+\n  ggtitle(label = \"Distribution of Joviality index by Household size\",\n          subtitle = \"The average of happiness index in Ohio is 0.5 among all household size\") +\n  geom_boxplot(width=0.1, color=\"black\", fill=\"white\") +\n  stat_summary(geom = \"point\",\n               fun.y=\"mean\",\n               colour =\"red\",\n               size=2)+\n  theme(axis.title.y= element_text(angle=0),\n        panel.background= element_blank(), \n        axis.line.y = element_line(color= 'grey'),\n        plot.title = element_text(color=\"black\", size=16, face=\"bold.italic\"),\n        plot.subtitle = element_text(size=10), \n        panel.grid.major.y = element_line(size = 0.3, \n                                          linetype = 'solid', colour = \"grey\"), \n        panel.grid.minor.y = element_line(size = 0.1, \n                                          linetype = 'solid', colour = \"grey\"),\n        axis.ticks.x = element_blank()) \n\nprint(after6)\n\n\n\n\nImprovements are made on a few elements:\nBoxplot is added on the remade graph to show the detailed\ndistribution of joviality on different household size.\nThe mean value of joviality is marked on the redesigned plot to\nindicate the differences of joviality index from each household\nsize.\n5. Learning Points\nThe purpose of this take-home exercise is to learn from peers and\nimprove our expression on plots. This drives me to reflect what I have\ndone on take-home exercise 1 after viewing all visualization design from\ndifferent perspectives of my classmates.\nMy key takeaways are:\nThere is not just a fixed way to plot a graph or design the\nvisualization for our story. It is always good if plots can deliver\nclear message and have aesthetics there.\nIt is not limited to just use one graph for the visualization.\nThe design of each type of graph has their own characteristics and\nspecific scenarios to use, but sometimes it is not enough to provide the\ninformation on single chart. Adding or combining properly other type of\ngraphs in one data visualization could definitely help readers to get\nyour points in short time.\n\n\n\n",
    "preview": "posts/2022-04-26-takehome2/takehome2_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2022-05-02T18:02:47+08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-04-18-takehome1/",
    "title": "Take-home Exercise 1",
    "description": "This is my Take-home Exercise on exploring demographic of Ohio in USA from VAST Challenge 2022.",
    "author": [
      {
        "name": "Joyce Tseng",
        "url": "https://www.linkedin.com/in/joyce-tseng-a7115a1aa/"
      }
    ],
    "date": "2022-04-20",
    "categories": [],
    "contents": "\n\nContents\n1. Overview\n2. Data Preparation\n2.1 Challenges Faced\n2.2 Ways to Overcome\nChallenges\n\n3. Sketch\n4. Step-by-step Description\n4.1 Installing Packages\n4.2 Importing the Dataset\n4.3 Data Wrangling\n4.4 Plot Population\nProportion\n4.5 Plot Education Level\n4.6 Plot Education\nLevel on Different Age\n4.7 Plot the\nMedium of Income by Eduction Level\n4.8 Plot the\nIncome on Age by Eduction Level\n4.9 Insight from\nVisualization\n\n5. Learning Points\n\n1. Overview\nIn this take-home exercise, we will explore and reveal the\ndemographics of Ohio in USA by creating data visualizations with\nggplot2 in R. The data is provided and can be downloaded\nfrom VAST Challenge\n2022. The data visualizations included in this exercise are:\nA population proportion of kids and adults.\nNumbers of education levels in 4 categories: Low, High School or\nCollege, Bachelors and Graduate.\nNumbers of education levels on different age.\nA medium of wage on education levels.\nA distribution of wage on age by education levels.\n2. Data Preparation\n2.1 Challenges Faced\nThe raw data only reveals a boolean value that whether the surveyed\nvolunteers have kids or not without further detailed information such as\ntheir kids’ age for us to identify the population composition.\nThe data of participants’ income contains different timestamp record\nand is also inconsistent between each participants.\nThe default visualization of size order created by\nggplot2 is based on the alphabetical order of categories in\nthe column.\n2.2 Ways to Overcome\nChallenges\nThe legal age of an adult is 18 years old generally in US;\ntherefore, the definition of a kid is a person who is under 18.\nAccording to Forbes\nstudy, the average of first-time mother in USA is from 21 to 26,\nwhile for fathers, it is from 27 to 31. Given this, we can defer that\ntheir kids are already an adult for those participants aged over\n50.\nThe function of summarize() in dplyr package\ncan help us summarize each group to fewer rows. Thus, we can derive the\naverage income of each participants from different timestamp.\nThe relevel() function in R can help us to resort the\nlevels of a factor by sepcifying our expected order on the grouping\nvariables.\n3. Sketch\n\n4. Step-by-step Description\n4.1 Installing Packages\nA list of packages, namely tidyverse,\nplotly, readxl, knitr,\ndplyr, ggplot2, grid would be\nused in this exercise. This code chunk installs the required packages\nand loads them into RStudio environment.\n\n\npackages = c('tidyverse', 'plotly', 'readxl', 'knitr', 'dplyr', 'ggplot2', \n             'grid')\n\nfor(p in packages){\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n\n4.2 Importing the Dataset\nData import was accomplished using read_csv() of readxl package,\nwhich is useful for reading csv files into a tibble.\n\n\nparticipants <- read_csv(\"Datasets/Attributes/Participants.csv\")\nFinancialJournal <- read_csv(\"Datasets/Journals/FinancialJournal.csv\")\n\n# Inspecting the structure of every columns in the dataframe\nglimpse(participants)\nglimpse(FinancialJournal)\n\n\n\n4.3 Data Wrangling\nDERIVING NUMBERS OF KIDS AND ADULTS\nTo derive new columns from the existing columns, the\nmutate() of dplyr is used to generate the data\nwith condition function, if_els().\n\n\nparticipants_mutated <- participants %>%\n  mutate(kids = if_else(haveKids == TRUE & age < 50, householdSize - 2, 0)) %>%\n  mutate(adults = if_else(haveKids == TRUE & age < 50, 0, householdSize))\n\n\n\nMERGING THE TWO DATA FRAMES\nBefore combining the separate data frames, the join table is created\nfirst and has calculated the average wage of each participants by\nparticipant ID. The merge() of dplyr is used\nto add a new column, wage, on the original data frame.\n\n\nWage <- FinancialJournal %>%\n  filter(category == \"Wage\") %>%\n  group_by(participantId) %>%\n  select(participantId, amount) %>%\n  summarise(wage = mean(amount))\n\nparticipants_mutated <- merge(x = participants_mutated, \n                              y = Wage[ , c(\"participantId\", \"wage\")], \n                              by = \"participantId\", all.x = TRUE)\n\n\n\n\n\n\n4.4 Plot Population Proportion\nPIVOTTING DATA\nThe column of kids and adults in original data frame are two separate\ncolumns and shows the value of each. This is not a good data structure\nfor ggplot2 to produce the graph, so we use\ngather() function to pivot them into a better structure.\n\n\nPopulation <- participants_mutated %>%\n  select(kids, adults) %>%\n  summarise(kids = sum(kids), adults = sum(adults)) \n\nPopulation <- gather(Population, kids, adults, key = group, value = value)\n\n\n\n\n\n\n\n\n\nPLOTTING THE GRAPH\nTo look at the demographics of a city, the population composition is\nthe first thing that we would like to know and the pie chart is the\nsuitable one to plot, which is mainly used for displaying the proportion\nin a variable.\nA graph was plotted using ggplot2 as follows:\ngeom_label is used to show the value of each group.\ngeom_text is used to display and calculate the percentage\nof each group.\n\n\nggplot(Population, aes(x=\"\", y=value, fill=group)) +\n  geom_bar(stat=\"identity\", width=1, color=\"white\") +\n  coord_polar(\"y\", start=0) +\n  theme_void() +\n  geom_label(aes(label = value), \n             position = position_stack(vjust = 0.5), \n             show.legend = FALSE) +\n  geom_text(aes(label = paste(round(value / sum(value) * 100, 1), \"%\"), x = 1.3), \n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer() +\n  ggtitle(\"Population Composition in Ohio USA\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n4.5 Plot Education Level\nAfter having a quick look at the population, another important factor\nin demographics is people’s education level. The bar graph is to show\nthe difference and the number of people in each category in a descending\norder.\nA graph was plotted using ggplot2 as follows:\nreorder() is to sort the bars by their respective\nfrequencies for better comparison.\ngeom_text() is to show the information of their value and\npercentage.\n\n\nggplot(participants_mutated, aes(x=reorder(educationLevel, \n                                           educationLevel, \n                                           function(x)-length(x)))) +\n  geom_bar(fill = \"lightsteelblue1\") +\n  ylim(0, 580) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100, 1), \"%\")), vjust=-1) +\n  ylab(\"No. of\\nParticipants\") +\n  theme(axis.title.y=element_text(angle = 0)) +\n  ggtitle(\"Population Distribution on Education Level\") +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  theme(axis.title.x=element_blank())\n\n\n\n\n4.6 Plot Education Level\non Different Age\nWe would like to see further that the distribution of people in\ndifferent age in each education level, we also put the background data\nthat sums up the number of people in different age.\nA graph was plotted using ggplot2 as follows:\nfactor() of Base R function can help resort the levels of a\nfactor by our expected order.\nCreating the data_bg is to reveal the distribution of age\nby education level with reference to all participants.\nfacet_wrap() is created to display numbers of people by a\ndiscrete variable, education level, on different age.\n\n\nparticipants_mutated$educationLevel = \n  factor(participants_mutated$educationLevel,\n         levels=c('Low','HighSchoolOrCollege','Bachelors','Graduate'))\n\ndata <- participants_mutated\ndata_bg <- data[, -5]\n\nggplot(data, aes(x = age, fill = educationLevel)) +\n  geom_histogram(data = data_bg, fill = \"grey\", alpha = .5) + \n  geom_histogram(colour = \"white\") +\n  facet_wrap(.~ educationLevel) +\n  guides(fill = FALSE) +  \n  theme_bw() +\n  theme(strip.background = element_rect(fill=\"beige\")) +\n  xlab(\"Age\") +\n  theme(axis.title.x = element_text(angle = 0)) +\n  theme(axis.title.y = element_blank()) +\n  ggtitle(\"Numbers of People in Different Age in Each Education Level\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n4.7 Plot the Medium\nof Income by Eduction Level\nThe boxplot is a way to compare multiple data distributions, since\nthey can be placed side by side by a discrete variable. Here we would\nlike use box plot to see the financial conditions of each participants\nby education level.\nA graph was plotted using ggplot2 as follows:\nThe medium value is added by using the geom_() function\nwith stat=summary and respective function in\nfun.y.\n\n\nggplot(data, aes(x = educationLevel, y = wage)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",\n             fun.y=\"medium\",\n             colour =\"red\",\n             size = 1.5) +\n  ylab(\"Wage\\n(USD)\") +\n  theme(axis.title.y=element_text(angle = 0)) +\n  theme(axis.title.x=element_blank())  +\n  ggtitle(\"The Medium of Income by Education Level\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n4.8 Plot the Income on\nAge by Eduction Level\nSince the age is also a factor to affect one’s income, we use the\nscatterplot to present, helping us easily observe the value of each\npoint in two axes.\nA graph was plotted using ggplot2 as follows:\nfacet_grid() instead of facet_wrap() is to better\ncompare the value from discrete variables on the matrix of panels in one\nrow.\n\n\nggplot(participants_mutated,\n       aes(x = age, y = wage, colour = factor(educationLevel))) +\n  geom_point(size = 1) + \n  facet_grid(.~ educationLevel, scales = \"free\") +\n  theme(strip.background = element_rect(fill=\"beige\"))  +\n  guides(colour = FALSE) +\n  xlab(\"Age\") +\n  theme(axis.title.x = element_text(angle = 0)) +\n  ylab(\"Wage\\n(USD)\") +\n  theme(axis.title.y=element_text(angle = 0)) +\n  ggtitle(\"Numbers of People in Different Age in Each Education Level\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n4.9 Insight from Visualization\nFrom the plot, we can describe that the education level in Ohio is\nhigh. Almost 40% of people graduated from bachelor and even higher and\nover 50% of people go to work after studying in high school and college.\nIn general, higher education level would result in higher income. The\nboxplot above has verified this and delivers the same information. The\nvalue of medium becomes higher from high school or college to graduate.\nAlthough the medium of low education level is higher than others, the\npercentage is too small (less than 10%) and the spread of wage is large.\nWe would not say people would have higher income if only in low\neducation level. However, the scatterplot tells us that the income for\nthe majority of people are under 250 dollars no matter the education\nlevel. Therefore, we can obtain that those whose income are over 250\ndollars in Ohio belongs to higher class.\n5. Learning Points\nThis take-home exercise provides a great opportunity to get\nfamiliarized with how to clean data and make the visualization by R\npackages, especially using tidyverse and\nggplot2 and their extensions.\nMy key takeaways are:\nAlways plan first before writing the code. A good visualization does\nnot just plot a graph and mark the label there but also the information\nbehind. This is a kind of storytelling for the audience to understand\nwhat you would like to deliver from the graph. To convince others of our\nfindings, a logical plan is necessary!\nRemember the principle of ‘Garbage in, garbage out.’ This means that\na data preparation for needed variables must be done properly before\nclear and meaningful visualizations are built no matter using R, Python\nor Tableau.\n\n\n\n",
    "preview": "posts/2022-04-18-takehome1/takehome1_files/figure-html5/unnamed-chunk-9-1.png",
    "last_modified": "2022-05-02T17:24:05+08:00",
    "input_file": {}
  }
]
